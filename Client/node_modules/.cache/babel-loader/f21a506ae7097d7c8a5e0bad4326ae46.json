{"ast":null,"code":"var _jsxFileName = \"/Users/lamaalaskar/Desktop/SEI/projects/personal-and-professional-page/Client/src/auth/components/Edit.js\";\nimport React, { Component } from \"react\";\n\nclass Edit extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => this.setState({\n      [event.target.name]: event.target.value\n    });\n\n    this.editfName = () => {\n      let copyofInformation = this.state.information;\n      var editText = prompt(\"TO EDIT YOUR TEXT: \", copyofInformation[0].firstName); // if the user didnt click on cancel or didnt insert empty value\n\n      if (editText !== null && editText !== \"\") {\n        // take this text and put it in the name of this object in the copy array\n        copyofInformation[0].firstName = editText; // change the trips that in the stete with the copy array\n\n        this.setState({\n          information: copyofInformation\n        });\n      }\n    };\n\n    this.editlName = () => {\n      let copyofInformation = this.props.lastName;\n      var editText = prompt(\"TO EDIT YOUR TEXT: \", copyofInformation[0].lastName); // if the user didnt click on cancel or didnt insert empty value\n\n      if (editText !== null && editText !== \"\") {\n        // take this text and put it in the name of this object in the copy array\n        copyofInformation[0].lastName = editText; // change the trips that in the stete with the copy array\n\n        this.setState({\n          information: copyofInformation\n        });\n      }\n    };\n\n    this.editMail = index => {\n      let copyofInformation = this.props.children;\n      var editText = prompt(\"TO EDIT YOUR TEXT: \", copyofInformation[index].email); // if the user didnt click on cancel or didnt insert empty value\n\n      if (editText !== null && editText !== \"\") {\n        // take this text and put it in the name of this object in the copy array\n        copyofInformation[0].email = editText; // change the trips that in the stete with the copy array\n\n        this.setState({\n          information: copyofInformation\n        });\n      }\n    };\n\n    this.state = {\n      information: [{\n        firstName: \"He\",\n        lastName: \"e\",\n        email: \"www\"\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Edit information\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"fname\",\n      value: this.state.information[0].firstName,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"fName\")), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lName\",\n      value: this.state.information[0].lastName,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"LastName\")), React.createElement(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"address\",\n      value: this.state.information[0].email,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Email\")), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Save\",\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))); // return (\n    //   <div>\n    //     <body className=\"body\">\n    //       <p>\n    //         {\" \"}\n    //         FirstName:{this.props.firstName}\n    //         <button onClick={this.editfName}>Edit Name</button>\n    //       </p>\n    //       <p>\n    //         editlName LastName: {this.props.lastName}\n    //         <button onClick={this.editlName}>Edit 1Name</button>\n    //       </p>\n    //       <p>\n    //         Email: {this.props.email}\n    //         <button onClick={this.editlName}>Edit Msil</button>\n    //       </p>\n    //     </body>\n    //   </div>\n    // );\n  }\n\n}\n\nexport default Edit;","map":{"version":3,"sources":["/Users/lamaalaskar/Desktop/SEI/projects/personal-and-professional-page/Client/src/auth/components/Edit.js"],"names":["React","Component","Edit","constructor","handleChange","event","setState","target","name","value","editfName","copyofInformation","state","information","editText","prompt","firstName","editlName","props","lastName","editMail","index","children","email","render","onSubmit","handleInputChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Edit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      information: [{ firstName: \"He\", lastName: \"e\", email: \"www\" }]\n    };\n  }\n\n  handleChange = event =>\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n\n  editfName = () => {\n    let copyofInformation = this.state.information;\n    var editText = prompt(\n      \"TO EDIT YOUR TEXT: \",\n      copyofInformation[0].firstName\n    );\n\n    // if the user didnt click on cancel or didnt insert empty value\n    if (editText !== null && editText !== \"\") {\n      // take this text and put it in the name of this object in the copy array\n      copyofInformation[0].firstName = editText;\n\n      // change the trips that in the stete with the copy array\n      this.setState({\n        information: copyofInformation\n      });\n    }\n  };\n  editlName = () => {\n    let copyofInformation = this.props.lastName;\n    var editText = prompt(\"TO EDIT YOUR TEXT: \", copyofInformation[0].lastName);\n    // if the user didnt click on cancel or didnt insert empty value\n    if (editText !== null && editText !== \"\") {\n      // take this text and put it in the name of this object in the copy array\n      copyofInformation[0].lastName = editText;\n\n      // change the trips that in the stete with the copy array\n      this.setState({\n        information: copyofInformation\n      });\n    }\n  };\n\n  editMail = index => {\n    let copyofInformation = this.props.children;\n    var editText = prompt(\n      \"TO EDIT YOUR TEXT: \",\n      copyofInformation[index].email\n    );\n    // if the user didnt click on cancel or didnt insert empty value\n    if (editText !== null && editText !== \"\") {\n      // take this text and put it in the name of this object in the copy array\n      copyofInformation[0].email = editText;\n\n      // change the trips that in the stete with the copy array\n      this.setState({\n        information: copyofInformation\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <br />\n\n        <h1>Edit information</h1>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"fname\"\n              value={this.state.information[0].firstName}\n              onChange={this.handleInputChange}\n            />\n            <label htmlFor=\"name\">fName</label>\n          </div>\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"lName\"\n              value={this.state.information[0].lastName}\n              onChange={this.handleInputChange}\n            />\n            <label htmlFor=\"city\">LastName</label>\n          </div>\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"address\"\n              value={this.state.information[0].email}\n              onChange={this.handleInputChange}\n            />\n            <label htmlFor=\"mail\">Email</label>\n          </div>\n          <input type=\"submit\" value=\"Save\" className=\"btn\" />\n        </form>\n      </div>\n    );\n\n    // return (\n    //   <div>\n    //     <body className=\"body\">\n    //       <p>\n    //         {\" \"}\n    //         FirstName:{this.props.firstName}\n    //         <button onClick={this.editfName}>Edit Name</button>\n    //       </p>\n\n    //       <p>\n    //         editlName LastName: {this.props.lastName}\n    //         <button onClick={this.editlName}>Edit 1Name</button>\n    //       </p>\n\n    //       <p>\n    //         Email: {this.props.email}\n    //         <button onClick={this.editlName}>Edit Msil</button>\n    //       </p>\n    //     </body>\n    //   </div>\n    // );\n  }\n}\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}